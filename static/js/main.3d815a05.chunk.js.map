{"version":3,"sources":["InfoBox.jsx","Table.jsx","util.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","cases","title","total","Card","Typography","Table","countries","className","map","country","sortData","data","sort","a","b","App","useState","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","useEffect","fetch","then","res","json","name","value","iso2","sortedData","getCountries","onCountryChange","e","countryCode","target","url","console","log","Select","id","onChange","MenuItem","todayCases","todayRecovered","recovered","todayDeaths","deaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d815a05.chunk.js","sourcesContent":["import { Typography, Card } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst InfoBox = ({ cases, title, total }) => {\r\n    return (\r\n        <>\r\n            <Card >\r\n\r\n                <Typography>\r\n                    {title}\r\n                </Typography>\r\n                <h3>\r\n                    {cases}\r\n                </h3>\r\n                <Typography>\r\n                    {total}\r\n                </Typography>\r\n            </ Card>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react'\r\nimport './Table.css'\r\n\r\nconst Table = ({ countries }) => {\r\n    return (\r\n        <>\r\n            <h3>Live Cases by Country</h3>\r\n            <div className=\"table\">\r\n                {\r\n                    countries.map(({ country, cases }) => (\r\n                        <tr>\r\n                            <td>{country}</td>\r\n                            <td><strong>{cases}</strong></td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","export const sortData = (data) => {\r\n    const sortedData = [...data];\r\n\r\n    return sortedData.sort((a,b) => (a.cases > b.cases ? -1 : 1));\r\n    \r\n}","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InfoBox from './InfoBox'\nimport Table from './Table'\nimport { Card } from '@material-ui/core';\nimport { sortData } from './util';\nimport Map from './Map'\n// import \"leaflet/dist/leaflet.css\"\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"Worldwide\");\n  const [countryInfo, setCountryInfo] = useState();\n  const [tableData, setTableData] = useState([])\n\n\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all')\n    .then(res => res.json())\n    .then((data) => {\n      setCountryInfo(data)\n    })\n  }, [])\n\n  useEffect(() => {\n   const getCountries = async () =>{\n      await fetch('https://disease.sh/v3/covid-19/countries')\n      .then(res => res.json())\n      .then((data) => {\n        const countries = data.map((country) => (\n          {\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }\n        ))\n        const sortedData = sortData(data)\n        setTableData(sortedData);\n        setCountries(countries);\n        \n      })\n   }\n   getCountries()\n  }, [])\n\n\n  const onCountryChange = async (e) =>{\n    const countryCode = e.target.value\n    \n    const url = countryCode === \"Worldwide\" ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    \n    await fetch(url)\n    .then(res => res.json())\n    .then((data) => {\n      setCountry(countryCode);\n\n\n      setCountryInfo(data); \n    })\n  }\n\n  console.log(countryInfo)\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-left\">\n        <div className=\"app-header\">\n          <h2>Covid 19 Tracker</h2>\n          <Select id=\"demo-simple-select-filled\" value={country} onChange={onCountryChange}>\n            <MenuItem value=\"Worldwide\">Worldwide</MenuItem>\n            {\n              countries.map((country) => {\n                return <MenuItem value={country.value}>{country.name}</MenuItem>\n              })\n            }            \n        </Select>\n        </div>\n        <div className=\"stats\">\n            <InfoBox title=\"Cases\" cases={countryInfo.todayCases} total={countryInfo.cases}/>\n            <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered}/>\n            <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\n        </div>\n\n        {/* <Map /> */}\n      </div>\n      <Card className=\"app-right\">\n          <Table countries={tableData}/>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}